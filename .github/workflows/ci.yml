name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Run regression tests
        run: npm run test:regression

      - name: Generate coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build-check:
    name: Build Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check dist files exist
        run: |
          test -f dist/index.js || exit 1
          test -f dist/cli.js || exit 1
          test -f dist/index.d.ts || exit 1

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test CLI
        run: |
          # Create test TypeScript definition file
          echo "interface TestInterface { prop: string; }" > test.d.ts

          # Run CLI
          node dist/cli.js test.d.ts test.pas

          # Check output exists
          test -f test.pas || exit 1

          # Check output contains expected content
          grep -q "TestInterface" test.pas || exit 1

          echo "✓ CLI integration test passed"

      - name: Test as installed package
        run: |
          # Install package globally
          npm install -g .

          # Test installed CLI
          ts2pas test.d.ts test2.pas

          # Check output
          test -f test2.pas || exit 1

          echo "✓ Installed package test passed"
